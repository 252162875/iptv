name: sync_live_list

# 定义工作流的触发器，每小时的第5分钟触发一次，并支持手动触发
on:
  schedule:
    - cron: '5 * * * *'
  workflow_dispatch:

# 定义工作流的环境变量
env:
  MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

jobs:
  sync_live_list_job:
    runs-on: ubuntu-latest

    steps:
      # 检出仓库代码
      - name: Checkout repository
        uses: actions/checkout@v2

      # 设置Python环境
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # 安装依赖
      - name: Install dependencies
        run: |
          pip install requests

      # 确保 syn_live_list.sh 文件存在
      - name: Verify syn_live_list.sh exists
        run: |
          if [ ! -f tools/syn_live_list.sh ]; then
            echo "Error: tools/syn_live_list.sh does not exist."
            exit 1
          fi

      # 运行 syn_live_list.sh 脚本
      - name: Run syn_live_list.sh
        run: |
          chmod +x tools/syn_live_list.sh
          ./tools/syn_live_list.sh
        env:
          MY_GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}

      # 复制生成的 .txt 和 .m3u 文件到 /tv 目录
      - name: Copy generated files to /tv directory
        run: |
          # 定义源目录和目标目录
          source_dir="./tools"
          target_dir="./tv"

          # 确保目标目录存在
          mkdir -p "$target_dir"

          # 获取源目录中的 .txt 和 .m3u 文件列表并复制文件到目标目录
          for file in "$source_dir"/*.txt "$source_dir"/*.m3u; do
            if [ -e "$file" ]; then
              target_file="$target_dir/$(basename "$file")"
              if [ ! -e "$target_file" ] || ! cmp -s "$file" "$target_file"; then
                cp "$file" "$target_dir"
              fi
            fi
          done

      # 提交 /tv 目录的更改到仓库
      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          # 添加更改
          git add tv

          # 提交更改
          timestamp=$(date -u)
          git commit -m "Auto-sync: Update tv files at $timestamp" || echo "No changes to commit"

          # 推送更改
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
